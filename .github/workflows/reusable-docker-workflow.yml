name: Reusable Docker Build and Push Workflow

on:
  workflow_call:
    secrets:
      ECR_NAMESPACE:
        required: true
      ECR_REPOSITORY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_SESSION_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.get-sha.outputs.short_sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get short Git commit SHA
        id: get-sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t public.ecr.aws/${{ secrets.ECR_NAMESPACE }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.get-sha.outputs.short_sha }} .

      - name: Save Docker image as tarball
        run: |
          docker save public.ecr.aws/${{ secrets.ECR_NAMESPACE }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.get-sha.outputs.short_sha }} -o image.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Log in to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin public.ecr.aws

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Load Docker image
        run: |
          docker load -i image.tar

      - name: Push Docker image to Public ECR
        run: |
          docker push public.ecr.aws/${{ secrets.ECR_NAMESPACE }}/${{ secrets.ECR_REPOSITORY }}:${{ needs.build.outputs.short_sha }}

      - name: Notify Teams of Build and Push Status
        if: always()
        run: |
          STATUS="${{ job.status }}"
          MESSAGE="**GitHub Actions Notification**\n\n**Repository**: ${{ github.repository }}\n**Branch**: ${{ github.ref_name }}\n**Commit**: ${{ github.sha }}\n**Job**: Docker Build & Push\n**Status**: $STATUS"
          curl -H 'Content-Type: application/json' \
               -d "{\"text\": \"$MESSAGE\"}" \
               "https://deloitte.webhook.office.com/webhookb2/d6ec191f-9653-4bc6-9995-e7bc47ca8037@36da45f1-dd2c-4d1f-af13-5abe46b99921/IncomingWebhook/9ab0dca3a3f243e8a075aee0cb97ade7/ba21d169-adfc-4a72-ab8b-2a830d095170/V2x-ATIod4ff6i6QRs5Qa6ovyr8Z9VbfOx9TAeBrTFiNM1"