name: Reusable Docker Build and Push to Public ECR

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      ecr-namespace:
        required: true
        type: string
      ecr-repository:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_SESSION_TOKEN:
        required: true

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.sha.outputs.short_sha }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get Git SHA
      id: sha
      run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build image and save
      run: |
        IMAGE_TAG=public.ecr.aws/${{ secrets.ECR_NAMESPACE }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.sha.outputs.short_sha }}
        docker build -t $IMAGE_TAG .
        docker save $IMAGE_TAG > image.tar

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: image.tar

  push:
    name: Push Docker Image
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download image
      uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: .

    - name: Load image
      run: docker load < image.tar

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Public ECR
      run: |
        aws ecr-public get-login-password --region ${{ inputs.aws-region }} | \
        docker login --username AWS --password-stdin public.ecr.aws

    - name: Push to Public ECR
      run: |
        SHORT_SHA=${{ needs.build.outputs.short_sha }}
        IMAGE_TAG=public.ecr.aws/${{ secrets.ECR_NAMESPACE }}/${{ secrets.ECR_REPOSITORY }}:$SHORT_SHA
        docker push $IMAGE_TAG
